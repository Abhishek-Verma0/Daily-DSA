name: Auto Comment on PR Merged

on:
  pull_request_target:
    types: [closed]

permissions:
  issues: write
  pull-requests: write

jobs:
  comment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Add Comment to Merged Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.issue.number;
            const prAuthor = context.payload.pull_request.user.login;
            const commentBody = `### 🎉 Congrats on getting your PR merged!🙌🏼\n\nThanks for the contribution — every small chunk of contribution helps improve the project.\n\nLooking forward to your next contribution! 🥳✨`;

            const staticLabels = ['PR Merged!🥳', 'GsSOC'];
            const levelLabels = ['Level-1', 'Level-2', 'Level-3'];
            let labelsToAdd = [...staticLabels];

            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });

              const events = await github.rest.issues.listEventsForTimeline({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                per_page: 100,
                mediaType: {
                  previews: ['mockingbird']
                }
              });

              for (const event of events.data) {
                if (event.event === "connected" && event.source?.issue) {
                  const linkedIssueNumber = event.source.issue.number;

                  const issue = await github.rest.issues.get({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: linkedIssueNumber
                  });

                  const issueLabels = issue.data.labels.map(label => label.name);
                  const foundLevelLabel = issueLabels.find(label => levelLabels.includes(label));

                  if (foundLevelLabel) {
                    labelsToAdd.push(foundLevelLabel);
                  }

                  break;
                }
              }

              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: labelsToAdd
              });

              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                assignees: [prAuthor]
              });

              console.log('Successfully updated merged PR.');
            } catch (error) {
              console.error('Failed to update merged PR:', error);
              core.setFailed(`Failed to update merged PR: ${error.message}`);
            }
